{"ast":null,"code":"var _jsxFileName = \"/home/patri/Escritorio/mis-ejercicios/arrays-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\n//FILTRAR Y BUSCAR ARRAYS\n\n/*Ejemplo de un listado de series con las siguientes funcionalidades:\n  - al pulsar una serie se des/marca como favorita\n  -\n\n*/\nimport '../styles/App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //ESTADOS\n  const [series, setSeries] = useState([{\n    id: '123',\n    isFavorite: false,\n    name: 'Juego de Tronos'\n  }, {\n    id: '456',\n    isFavorite: false,\n    name: 'Las chicas Gilmore'\n  }, {\n    id: '678',\n    isFavorite: false,\n    name: 'Gambita de Dama'\n  }]);\n  const [searchName, setSearchName] = useState('');\n  const [searchIsFavorite, setSearchIsFavorite] = useState(false); //EVENTOS\n\n  const handleFavorite = ev => {\n    const clickedSerieId = ev.currentTarget.id;\n    const foundSerie = series.find(serie => serie.id === clickedSerieId);\n    foundSerie.isFavorite = !foundSerie.isFavorite;\n    setSeries([...series]);\n  };\n\n  const handleSearchName = ev => {\n    setSearchName(ev.currentTarget.value);\n  };\n\n  const handleSearchIsFavorite = ev => {\n    setSearchIsFavorite(ev.target.checked);\n  }; //FUNCIONES RENDERIZADO\n\n\n  const renderSeries = () => {\n    return series //filtramos por nombre\n    .filter(serie => {\n      return serie.name.toLowerCase().includes(searchName.toLowerCase());\n    }) //filtramos por favorito\n    .filter(serie => {\n      if (setSearchIsFavorite === true) {\n        return serie.isFavorite === true;\n      } else {\n        return true;\n      }\n    }) // mapeamos: es la manera para pintar un array en react. Se mete el código en una función y debe retornar una o varias etiquetas de HTML (debe incluir la propiedad key, que es única)\n    .map(serie => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: serie.id,\n        onClick: handleFavorite,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: serie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Es mi serie favorita: \", serie.isFavorite ? 'Sí' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, serie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de series favoritas:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderSeries()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"searchName\",\n        children: \"Buscar por nombre de serie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"searchName\",\n        value: searchName,\n        onChange: handleSearchName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"searchIsFavorite\",\n        children: \"Mostrar solo las favoritas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"searchIsFavorite\",\n        value: searchIsFavorite,\n        onChange: handleSearchIsFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zXkl7mtyicaXsCeSXNVJn1el4l8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/patri/Escritorio/mis-ejercicios/arrays-react/src/components/App.js"],"names":["useState","App","series","setSeries","id","isFavorite","name","searchName","setSearchName","searchIsFavorite","setSearchIsFavorite","handleFavorite","ev","clickedSerieId","currentTarget","foundSerie","find","serie","handleSearchName","value","handleSearchIsFavorite","target","checked","renderSeries","filter","toLowerCase","includes","map"],"mappings":"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","sourcesContent":["//FILTRAR Y BUSCAR ARRAYS\n\n/*Ejemplo de un listado de series con las siguientes funcionalidades:\n  - al pulsar una serie se des/marca como favorita\n  -\n\n*/\nimport '../styles/App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  //ESTADOS\n  const [series, setSeries] = useState([\n    { id: '123', isFavorite: false, name: 'Juego de Tronos' },\n    { id: '456', isFavorite: false, name: 'Las chicas Gilmore' },\n    { id: '678', isFavorite: false, name: 'Gambita de Dama' },\n  ]);\n  const [searchName, setSearchName] = useState('');\n  const [searchIsFavorite, setSearchIsFavorite] = useState(false);\n\n  //EVENTOS\n\n  const handleFavorite = (ev) => {\n    const clickedSerieId = ev.currentTarget.id;\n    const foundSerie = series.find(serie => serie.id === clickedSerieId);\n    foundSerie.isFavorite = !foundSerie.isFavorite;\n    setSeries([...series]);\n  };\n\n\n  const handleSearchName = (ev) => {\n    setSearchName(ev.currentTarget.value);\n  };\n\n  const handleSearchIsFavorite = ev => {\n    setSearchIsFavorite(ev.target.checked);\n  }\n\n  //FUNCIONES RENDERIZADO\n\n  const renderSeries = ()=>{\n    return (\n      series\n      //filtramos por nombre\n      .filter(serie => {\n        return serie.name.toLowerCase().includes(searchName.toLowerCase());\n      })\n      //filtramos por favorito\n      .filter(serie => {\n        if (setSearchIsFavorite === true){\n          return serie.isFavorite === true;\n        } else {\n          return true;\n        }\n      })\n      // mapeamos: es la manera para pintar un array en react. Se mete el código en una función y debe retornar una o varias etiquetas de HTML (debe incluir la propiedad key, que es única)\n      .map(serie =>{\n        return (\n          <li key={serie.id} id={serie.id} onClick={handleFavorite}>\n            <h2>{serie.name}</h2>\n            <p>Es mi serie favorita: {serie.isFavorite ? 'Sí' : 'No'}</p>\n          </li>\n        );\n      })\n    );\n  };\n\n  return (\n    <div>\n      <h1>Lista de series favoritas:</h1>\n      <ul>{renderSeries()}</ul>\n      <form>\n        <label htmlFor=\"searchName\">Buscar por nombre de serie</label>\n        <input\n          type=\"text\"\n          id=\"searchName\"\n          value={searchName}\n          onChange={handleSearchName}\n        />\n        <label htmlFor=\"searchIsFavorite\">Mostrar solo las favoritas</label>\n        <input\n          type=\"checkbox\"\n          id=\"searchIsFavorite\"\n          value={searchIsFavorite}\n          onChange={handleSearchIsFavorite}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}